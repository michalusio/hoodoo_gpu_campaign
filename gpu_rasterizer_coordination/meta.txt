kind = sequential
immutable_program = true
immutable_spec = true
title = "Rasterization Coordination"
size = [-256, -256, 255, 255]
background = 5
components_available = [com_halt: -1, com_pixel_screen: -1, com_on: -1, com_off: -1, com_and_bit: -1, com_and_3_bit: -1, com_switch_bit: -1, com_switch_word: -1, com_add: -1, com_constant: -1, com_equal: -1, com_less_s: -1, com_less_u: -1, com_mux: -1, com_nand_word: -1, com_not_word: -1, com_lsl: -1, com_lsr: -1, com_asr: -1, com_rol: -1, com_ror: -1, com_xor_word: -1, com_xnor_word: -1, com_counter: -1, com_decoder_1: -1, com_decoder_2: -1, com_decoder_3: -1, com_div: -1, com_mod: -1, com_delay_line_bit: -1, com_splitter_bit_2: -1, com_splitter_bit_4: -1, com_splitter_bit_8: -1, com_maker_bit_2: -1, com_maker_bit_4: -1, com_maker_bit_8: -1, com_full_adder: -1, com_mul: -1, com_nand_bit: -1, com_nor_bit: -1, com_not_bit: -1, com_splitter_word_2: -1, com_splitter_word_4: -1, com_splitter_word_8: -1, com_maker_word_2: -1, com_maker_word_4: -1, com_maker_word_8: -1, com_static_indexer: -1, com_static_indexer_config: -1, com_concatenator_2: -1, com_concatenator_4: -1, com_concatenator_8: -1, com_or_bit: -1, com_or_3_bit: -1, com_or_word: -1, com_and_word: -1, com_nor_word: -1, com_register_word: -1, com_delay_line_word: -1, com_register_bit: -1, com_inc: -1, com_neg: -1, com_ram_fast: -1, com_load_port: -1, com_store_port: -1, com_ssd: -1, com_time: -1, com_console: -1, com_keyboard: -1, com_xnor_bit: -1, com_xor_bit: -1, com_cc_input: -1, com_cc_output: -1]
copy_solution_to_architecture = "Hoodoo"
// copy_solution_to_level = ["gpu_rasterizer_2"]
dialogue = [
  (alien_centered, "Using only one set of triangles doesn't allow us to draw much.
We also need to be able to tell the rasterizer when it should begin drawing the image."),
  (info, "We need to modify the rasterizer to read instructions coming from the input located in the level, and perform the operations:
[code][color=#ff9800]00000000000000000000000000000000[/color][/code]
Do nothing
[code][color=#ff9800]00000000[/color][color=#0098ff]AAAAAAAAAAAAAAAAAAAAAAAA[/color][/code]
Draw [color=#0098ff]A[/color] triangles
[code][color=#ff9800]001[/color][color=#0098ff]AAAAAAAAAAAAAAAAAAAAAAAAAAAAA[/color][/code]
Set the start address to read triangles from, to [color=#0098ff]A[/color]")
  (info, "Respond to inputs and perform the requested operations.
Do not respond to any commands while the rasterizer is working.
  
Hints:
- Connect the ROM counter to the assembler so you can see which triangle is currently being drawn.
- Turn up the simulation speed to 20KHz, as rendering will take a moment.")
]
default_isa_spec = `
[settings]
name = "Hoodoo"

[fields]

[instructions]

point %a(immediate), %b(immediate)
%a[7:0] %a[15:8] %b[7:0] %b[15:8]
A 2D point.

color %r(immediate), %g(immediate), %b(immediate)
bbbbbbbb gggggggg rrrrrrrr
A color.

`
default_assembly = `
; 1. All Red
point 159, 119
color 255, 0, 0
point 0, 0
color 255, 0, 0
point 159, 0
color 255, 0, 0

; 2. Screen Clear
point 159, 119
color 0, 0, 0
point 0, 0
color 0, 0, 0
point 119, 0
color 0, 0, 0
`