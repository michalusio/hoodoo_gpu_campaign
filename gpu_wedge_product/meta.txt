kind = combinational
title = "Wedge Product"
size = [-64, -64, 63, 63]
background = 6
components_available = [com_on: -1, com_off: -1, com_and_bit: -1, com_and_3_bit: -1, com_switch_bit: -1, com_switch_word: -1, com_add: -1, com_constant: -1, com_equal: -1, com_less_s: -1, com_less_u: -1, com_mux: -1, com_nand_word: -1, com_not_word: -1, com_lsl: -1, com_lsr: -1, com_asr: -1, com_rol: -1, com_ror: -1, com_xor_word: -1, com_xnor_word: -1, com_counter: -1, com_decoder_1: -1, com_decoder_2: -1, com_decoder_3: -1, com_div: -1, com_mod: -1, com_delay_line_bit: -1, com_splitter_bit_2: -1, com_splitter_bit_4: -1, com_splitter_bit_8: -1, com_maker_bit_2: -1, com_maker_bit_4: -1, com_maker_bit_8: -1, com_full_adder: -1, com_mul: -1, com_nand_bit: -1, com_nor_bit: -1, com_not_bit: -1, com_splitter_word_2: -1, com_splitter_word_4: -1, com_splitter_word_8: -1, com_maker_word_2: -1, com_maker_word_4: -1, com_maker_word_8: -1, com_static_indexer: -1, com_static_indexer_config: -1, com_concatenator_2: -1, com_concatenator_4: -1, com_concatenator_8: -1, com_or_bit: -1, com_or_3_bit: -1, com_or_word: -1, com_and_word: -1, com_nor_word: -1, com_register_word: -1, com_delay_line_word: -1, com_register_bit: -1, com_inc: -1, com_neg: -1, com_ram_fast: -1, com_load_port: -1, com_store_port: -1, com_ssd: -1, com_time: -1, com_console: -1, com_keyboard: -1, com_xnor_bit: -1, com_xor_bit: -1, com_cc_input: -1, com_cc_output: -1]
input_labels = [["Axy"], ["Bxy"]]
output_labels = ["A x B"]
copy_solution_to_factory = "Hoodoo/Vector/Wedge"
dialogue = [
  (alien_centered, "For working with pixels on the screen it's useful to think about the operations we can do on two-dimensional vectors.
In our case they are represented as two 32bit fixed-point numbers, packed together."),
  (alien_centered, "A nice operation you can perform on 2D vectors is [color=#ff9800]Wedge Product[/color].
Interpretting it geometrically, this operation returns the area of the parallelogram made by using the two vectors as the sides."),
  (info, "The formula for calculating the wedge product is:
[center]A x B = Ax * By - Bx * Ay[/center]"),
  (info, "Calculate the wedge product of two 2D vectors.
Hint: You may want to make a custom component for subtraction.")
]
post_mortem = [
    (alien, `Calculating the area given by two vectors is very useful - you can skip drawing the triangles which do not take any area on the screen that way.`)
]